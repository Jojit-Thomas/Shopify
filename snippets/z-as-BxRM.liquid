{% assign normalized_svg = normalized_svg | replace: 'viewbox="', 'viewBox="' | replace: "viewbox='", 'viewBox="' | replace: "viewBox='", 'viewBox="' | replace: "'", '"' %} {% assign viewBox_parts = normalized_svg | split: 'viewBox="' %} {% if viewBox_parts.size > 1 %} {% assign viewBox_details = viewBox_parts[1] | split: '"' %} {% assign viewBox_values = viewBox_details[0] %} {% endif %} {% assign svg_parts = normalized_svg | split: 'fill="' %} {% if svg_parts.size > 1 %} {% assign fill_part = svg_parts[1] | split: '"' %} {% assign fill_value = fill_part[0] %} {% endif %} {% assign svg_parts_stroke = normalized_svg | split: 'stroke-width="' %} {% if svg_parts_stroke.size > 1 %} {% assign stroke_part = svg_parts_stroke[1] | split: '"' %} {% assign stroke_value = stroke_part[0] %} {% endif %} {% assign svg_parts_path = normalized_svg | split: '<path' %} {% assign paths = "" %} {% for part in svg_parts_path offset:1 %} {% assign path = '<path' | append: part | split: '</path>' %} {% assign path = path[0] | append: '</path>' %} {% assign paths = paths | append: path %} {% endfor %} {% assign svg_content = paths %} {% assign parts = svg_content | split: '#' %} {% assign hex_colors = '' %} {% for part in parts offset: 1 %} {% assign color = part | slice: 0, 6 %} {% assign hex_colors = hex_colors | append: color | append: ',' %} {% endfor %} {% assign hex_color_list = hex_colors | split: ',' | uniq %} {% for color in hex_color_list %} {% if color != '' %} {% assign hex_color = '#' | append: color %} {% assign paths = svg_content | replace: hex_color, 'currentColor' %} {% endif %} {% endfor %} {% capture rect_elements %} {% assign rects = normalized_svg | split:"<rect" %} {% for rect in rects %} {% if forloop.first == false %} {% assign rect = rect | split:"</rect>" | first %} <rect{{ rect | replace: '&quot;', '"' | replace: '&gt;', '>' }} {% endif %} {% endfor %} {% endcapture %} {% assign svg_content = rect_elements %} {% assign parts = svg_content | split: '#' %} {% assign hex_colors = '' %} {% for part in parts offset: 1 %} {% assign color = part | slice: 0, 6 %} {% assign hex_colors = hex_colors | append: color | append: ',' %} {% endfor %} {% assign hex_color_list = hex_colors | split: ',' | uniq %} {% for color in hex_color_list %} {% if color != '' %} {% assign hex_color = '#' | append: color %} {% assign rect_elements = svg_content | replace: hex_color, 'currentColor' %} {% endif %} {% endfor %} {% if cursor == "default" %} *:not(.app-swiper):not(.app-swiper:active):not(.app-swiper:active *):not(.app-swiper *:active):not(input):not(input *):not(textarea):not(textarea *):not(select):not(select *):not(form):not(form *):not(button):not(button *):not([href]):not([href] *) { cursor: url("data:image/svg+xml;utf8,%3Csvg width='{{ size }}' height='{{ size }}' viewBox='{{ viewBox_values }}' fill='%23{{ color | remove: '#'}}' xmlns='http://www.w3.org/2000/svg' color='%23{{ color | remove: '#'}}'%3E%3C{{ paths | remove: '<' | remove: '/path>' | remove: '>'| replace: '"', "'" }}%3E%3C/path%3E%3C/svg%3E") 0 0, auto; } {% elsif cursor == "click" %} *:active:not(.app-swiper):not(.app-swiper:active):not(.app-swiper:active *):not(.app-swiper *:active):not(input):not(input *):not(textarea):not(textarea *):not(select):not(select *):not(form):not(form *):not(button):not(button *):not([href]):not([href] *) { cursor: url("data:image/svg+xml;utf8,%3Csvg width='{{ size }}' height='{{ size }}' viewBox='{{ viewBox_values }}' fill='%23{{ color | remove: '#'}}' xmlns='http://www.w3.org/2000/svg' color='%23{{ color | remove: '#'}}'%3E%3C{{ paths | remove: '<' | remove: '/path>' | remove: '>'| replace: '"', "'" }}%3E%3C/path%3E%3C/svg%3E") 0 0, auto!important; } {% elsif cursor == "grab" %} .app-swiper, .app-swiper *, slider, slider * { {% if normalized_svg != blank %} cursor: url("data:image/svg+xml;utf8,%3Csvg width='{{ size }}' height='{{ size }}' viewBox='{{ viewBox_values }}' fill='%23{{ color | remove: '#'}}' xmlns='http://www.w3.org/2000/svg' color='%23{{ color | remove: '#'}}'%3E%3C{{ paths | remove: '<' | remove: '/path>' | remove: '>'| replace: '"', "'" }}%3E%3C/path%3E%3C/svg%3E") 0 0, auto!important; {% else %} cursor: grab!important; {% endif %} pointer-events: fill; } {% elsif cursor == "select_grab" %} .app-swiper:active, .app-swiper:active *, .app-swiper *:active, slider:active, slider:active *, slider *:active { {% if normalized_svg != blank %} cursor: url("data:image/svg+xml;utf8,%3Csvg width='{{ size }}' height='{{ size }}' viewBox='{{ viewBox_values }}' fill='%23{{ color | remove: '#'}}' xmlns='http://www.w3.org/2000/svg' color='%23{{ color | remove: '#'}}'%3E%3C{{ paths | remove: '<' | remove: '/path>' | remove: '>'| replace: '"', "'" }}%3E%3C/path%3E%3C/svg%3E") 0 0, auto!important; {% else %} cursor: grabbing!important; {% endif %} pointer-events: fill; } {% elsif cursor == "hover" %} [href], [href] *, [href]:active, [href]:active *, [role="button"], [role="button"] *, .app-swiper [role="button"], .app-swiper [role="button"] *, [role="button"] svg:hover, [role="button"] use:hover, [role="button"] svg:hover *, .app-swiper [role="button"] svg:hover, .app-swiper [role="button"] use:hover, .app-swiper [role="button"] svg:hover *, [role="button"]:active, [role="button"]:active *, [role="button"]:active svg:hover, [role="button"]:active use:hover, [role="button"]:active svg:hover *, .app-swiper [role="button"]:active, .app-swiper [role="button"]:active *, .app-swiper [role="button"]:active svg:hover, .app-swiper [role="button"]:active use:hover, .app-swiper [role="button"]:active svg:hover *, [role="link"], [role="link"] *, .app-swiper [role="link"], .app-swiper [role="link"] *, [role="link"] svg:hover, [role="link"] use:hover, [role="link"] svg:hover *, .app-swiper [role="link"] svg:hover, .app-swiper [role="link"] use:hover, .app-swiper [role="link"] svg:hover *, [role="link"]:active, [role="link"]:active *, [role="link"]:active svg:hover, [role="link"]:active use:hover, [role="link"]:active svg:hover *, .app-swiper [role="link"]:active, .app-swiper [role="link"]:active *, .app-swiper [role="link"]:active svg:hover, .app-swiper [role="link"]:active use:hover, .app-swiper [role="link"]:active svg:hover *, button, button *, button:hover, button:hover *, button:active, button:active *, .app-swiper button, .app-swiper button *, .app-swiper button:hover, .app-swiper button:hover *, .app-swiper button:active, .app-swiper button:active * { {% if normalized_svg != blank %} cursor: url("data:image/svg+xml;utf8,%3Csvg width='{{ size }}' height='{{ size }}' viewBox='{{ viewBox_values }}' fill='%23{{ color | remove: '#'}}' xmlns='http://www.w3.org/2000/svg' color='%23{{ color | remove: '#'}}'%3E%3C{{ paths | remove: '<' | remove: '/path>' | remove: '>'| replace: '"', "'" }}%3E%3C/path%3E%3C/svg%3E") 0 0, auto!important; {% else %} cursor: pointer!important; {% endif %} pointer-events: fill; } {% elsif cursor == "input" %} input, textarea, select, form, input:focus, textarea:focus, select:focus, form:focus, input:active, textarea:active, select:active, form:active { {% if normalized_svg != blank %} cursor: url("data:image/svg+xml;utf8,%3Csvg width='{{ size }}' height='{{ size }}' viewBox='{{ viewBox_values }}' fill='%23{{ color | remove: '#'}}' xmlns='http://www.w3.org/2000/svg' color='%23{{ color | remove: '#'}}'%3E%3C{{ paths | remove: '<' | remove: '/path>' | remove: '>'| replace: '"', "'" }}%3E%3C/path%3E%3C/svg%3E") 0 0, auto!important; {% else %} cursor: text!important; {% endif %} pointer-events: fill; } {% elsif cursor == "false" %} {% if svg_type != "display" %} <svg style="display: none;"> <symbol id="{{ svg_type }}" viewBox="{{ viewBox_values }}" fill={% if fill_value == "none" %}"{{ fill_value }}"{% else %}"currentColor"{% endif %} stroke-width="{% if stroke_value != nil %}{{ stroke_value }}{% else %}1{% endif %}" xmlns="http://www.w3.org/2000/svg" color="currentColor"> {{ paths }} {{ rect_elements }} </symbol> </svg> {% else %} <svg style="display: none;"> <symbol id="{{ svg_type }}-{{ block.id }}" viewBox="{{ viewBox_values }}" fill={% if fill_value == "none" %}"{{ fill_value }}"{% else %}"currentColor"{% endif %} stroke-width="{% if stroke_value != nil %}{{ stroke_value }}{% else %}1{% endif %}" xmlns="http://www.w3.org/2000/svg" color="currentColor"> {{ paths }} {{ rect_elements }} </symbol> </svg> <svg> <use xlink:href="#{{ svg_type }}-{{ block.id }}"></use> </svg> {% endif %} {% endif %}